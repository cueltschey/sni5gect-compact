cell:
  band: 3 # Band number
  nof_prb: 106 # Number of Physical Resource Blocks
  scs_common: 15 # Subcarrier Spacing for common (kHz)
  scs_ssb: 15 # Subcarrier Spacing for SSB (kHz)
  ssb_period_ms: 10 # SSB periodicity in milliseconds
  dl_arfcn: 373000 # Downlink ARFCN
  ssb_arfcn: 371530 # SSB ARFCN


source:
  source_type: uhd
  source_params: type=x300,master_clock_rate=184.32e6,clock=gpsdo,sync=gpsdo,sampling_rate=23.04e6

enable_recorder: false # record the IQ samples to file
pcap_folder: logs/

rf:
  sample_rate: 23.04e6
  num_channels: 2
  uplink_cfo: 0 # Uplink Carrier Frequency Offset correction in Hz
  downlink_cfo: 0 # Downlink Carrier Frequency Offset (CFO) in Hz
  padding:
    front_padding: 0 # Number of IQ samples to pad in front of each burst
    back_padding: 0 # Number of IQ samples to pad at the end of each burst
  channels:
    - rx_frequency: 1865e6
      tx_frequency: 1865e6
      rx_offset: 0
      tx_offset: 0
      rx_gain: 24
      tx_gain: 31
      enable: true
    - rx_frequency: 1770e6
      tx_frequency: 1770e6
      rx_offset: 0
      tx_offset: 0
      rx_gain: 24
      tx_gain: 31
      enable: true

workers:
  pool_size: 24 # Worker pool size
  n_ue_dl_worker: 4 # Number of UE downlink workers
  n_ue_ul_worker: 4 # Number of UE uplink workers
  n_gnb_dl_worker: 4 # Number of gNB downlink workers
  n_gnb_ul_worker: 4 # Number of gNB uplink workers

uetracker:
  close_timeout: 5000 # ms: stop tracking if no messages received
  parse_messages: true # Parse messages
  num_ues: 5 # Number of UETrackers to pre-initialize
  enable_gpu: false # GPU acceleration for decoding

downlink_injector:
  delay_n_slots: 3 # Number of slots to delay injecting the message
  duplications: 4 # Number of duplications to send in each inject
  tx_cfo_correction: 0 # Uplink CFO correction (Hz)
  tx_advancement: 58 # Number of samples to send in advance
  pdsch_mcs: 0 # PDSCH MCS
  pdsch_prbs: 12 # PDSCH PRBs


log:
  log_level: INFO
  syncer: INFO
  worker: INFO
  bc_worker: INFO

exploit: build/modules/lib_dummy_exploit.so # exploit module to use
