#ifndef DUMMY_EXPLOIT_H
#define DUMMY_EXPLOIT_H
#include "shadower/hdr/exploit.h"
#include "shadower/hdr/safe_queue.h"
class DummyExploit : public Exploit
{
public:
  DummyExploit(SafeQueue<std::vector<uint8_t> >& dl_buffer_queue_, SafeQueue<std::vector<uint8_t> >& ul_buffer_queue_) :
    Exploit(dl_buffer_queue_, ul_buffer_queue_)
  {
  }
  ~DummyExploit() = default;
  void setup() override {}
  void pre_dissection(wd_t* wd) override {}
  void post_dissection(wd_t*                 wd,
                       uint8_t*              buffer,
                       uint32_t              len,
                       uint8_t*              raw_buffer,
                       uint32_t              raw_buffer_len,
                       direction_t           direction,
                       uint32_t              slot_idx,
                       srslog::basic_logger& logger) override
  {
  }
};
#endif // DUMMY_EXPLOIT_H